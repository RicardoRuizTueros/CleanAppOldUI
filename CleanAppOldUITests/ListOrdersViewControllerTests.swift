//
//  ListOrdersViewControllerTests.swift
//  CleanAppOldUI
//
//  Created by Ricardo Ruiz on 12/10/2019.
//  Copyright (c) 2019 Ricardo Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanAppOldUI
import XCTest

class ListOrdersViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListOrdersViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupListOrdersViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListOrdersViewController()
  {
    sut = ListOrdersViewController()
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class ListOrdersBusinessLogicSpy: ListOrdersBusinessLogic
  {
    
    var loadProductsCalled = false
    var deleteProductsCalled = false
    var addProductsCalled = false
    
    func LoadProducts(request: ListOrders.LoadProducts.Request) {
        loadProductsCalled = true
    }
    
    func DeleteProduct(request: ListOrders.DeleteProduct.Request) {
        deleteProductsCalled = true
    }
    
    func AddProduct(request: ListOrders.AddProduct.Request) {
        addProductsCalled = true
    }
   
  }
  
  // MARK: Tests
  
  func testShouldDoSomethingWhenViewIsLoaded()
  {
    // Given
    let spy = ListOrdersBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.loadProductsCalled, "viewDidLoad() should ask the interactor to do something")
  }
  
  func testDisplayProducts()
  {
    // Given
    let products = [Product(name: "Product1"), Product(name: "Product2")]
    let viewModel = ListOrders.LoadProducts.ViewModel(products: products)
    
    // When
    loadView()
    sut.DisplayProducts(viewModel: viewModel)
    
    // Then
    XCTAssertTrue(sut.tableView.visibleCells.count == products.count, "Displayed correct number of cells")
  }
}
